test_duration: 3000
# prepare_write_cmd: ["cassandra-stress write no-warmup cl=ALL n=162500000 -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=1..162500000",
#                     "cassandra-stress write no-warmup cl=ALL n=162500000 -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=162500000..325000000",
#                     "cassandra-stress write no-warmup cl=ALL n=162500000 -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=325000000..487500000",
#                     "cassandra-stress write no-warmup cl=ALL n=162500000 -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=487500000..650000000"]

# stress_cmd_w: "cassandra-stress write no-warmup cl=QUORUM duration=2850m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=250 fixed=20332/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,9750000)' "
# stress_cmd_r: "cassandra-stress read no-warmup  cl=QUORUM duration=800m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=250 fixed=10310/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,9750000)' "
# stress_cmd_m: "cassandra-stress mixed no-warmup cl=QUORUM duration=800m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=250 fixed=8750/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,6500000)' "

### FOR DOCKER ###
# prepare_write_cmd: "cassandra-stress write no-warmup cl=QUORUM duration=5s -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=25 fixed=100/s' -col 'size=FIXED(128) n=FIXED(8)' -pop seq=1..162500000"
# stress_cmd_w: "cassandra-stress write no-warmup cl=QUORUM duration=10m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=25 fixed=100/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,9750000)' "
# stress_cmd_r: "cassandra-stress read no-warmup  cl=QUORUM duration=5m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=25 fixed=100/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,9750000)' "
# stress_cmd_m: "cassandra-stress mixed no-warmup cl=QUORUM duration=5m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=25 fixed=100/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,6500000)' "
# n_monitor_nodes: 0
# use_mgmt: false
### FOR DOCKER ###

### FOR AWS ###
prepare_write_cmd: "cassandra-stress write no-warmup cl=QUORUM duration=5m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=250 fixed=30000/s' -col 'size=FIXED(128) n=FIXED(8)' -pop seq=1..162500000"
stress_cmd_w: "cassandra-stress write no-warmup cl=QUORUM duration=120m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=250 fixed=5000/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,9750000)' "
stress_cmd_r: "cassandra-stress read no-warmup  cl=QUORUM duration=120m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=250 fixed=5000/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,9750000)' "
stress_cmd_m: "cassandra-stress mixed no-warmup cl=QUORUM duration=120m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3)' -mode cql3 native -rate 'threads=250 fixed=5000/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..650000000,325000000,6500000)' "
n_monitor_nodes: 1
use_mgmt: false
store_perf_results: true
email_recipients: ["asias@scylladb.com"]
use_prepared_loaders: true
use_hdr_cs_histogram: true
use_placement_group: true
use_capacity_reservation: true
email_subject_postfix: 'latency during operations'
### FOR AWS ###

# n_db_nodes: 3
# nemesis_add_node_cnt: 3
# n_loaders: 4
# n_monitor_nodes: 1

n_db_nodes: 3
nemesis_add_node_cnt: 3
n_loaders: 1

# instance_type_loader: 'c5.2xlarge'
# instance_type_monitor: 't3.large'
# instance_type_db: 'i3en.2xlarge'

instance_type_loader: 'c5.xlarge'
instance_type_monitor: 't3.large'
instance_type_db: 'i3en.xlarge'

# nemesis_class_name: 'NemesisSequence'
# nemesis_interval: 30
# nemesis_sequence_sleep_between_ops: 10

nemesis_class_name: NoCorruptRepairAllNodesMonkey
nemesis_interval: 0
nemesis_filter_seeds: false
nemesis_during_prepare: true

user_prefix: 'perf-latency-nemesis'
#space_node_threshold: 644245094
#ami_id_db_scylla_desc: 'VERSION_DESC'

round_robin: true
#append_scylla_args: '--blocked-reactor-notify-ms 5 --abort-on-lsa-bad-alloc 1 --abort-on-seastar-bad-alloc --abort-on-internal-error 1 --abort-on-ebadf 1'
#append_scylla_args: '--repair-hints-batchlog-flush-cache-time-in-ms 60000 --blocked-reactor-notify-ms 5 --abort-on-lsa-bad-alloc 1 --abort-on-seastar-bad-alloc --abort-on-internal-error 1 --abort-on-ebadf 1'
append_scylla_args: '--repair-hints-batchlog-flush-cache-time-in-ms 0 --blocked-reactor-notify-ms 5 --abort-on-lsa-bad-alloc 1 --abort-on-seastar-bad-alloc --abort-on-internal-error 1 --abort-on-ebadf 1'
backtrace_decoding: false
print_kernel_callstack: true

append_scylla_yaml:
    enable_tablets: false
